										 基于安卓手机的智能门锁设计
1.微控制器：STM32F103VET6
2.模块：4G通信模块、4*4矩阵键盘、AS608指纹识别模块
3.存储：FatFs文件系统  芯片：W25Q64
<---------认证密码、系统密码、一次性临时密码--------->
4.功能
A 指纹解锁（录、删、验证指纹）
	刷指纹解锁：直接手指按压，检测指纹是否存在，存在即可开锁
	录指纹：按一次11，需要成功输入认证密码方可录入。录入时首先验证指纹是否存在，若存在，建议更换指纹
	删指纹：按一次12，输入ID方可删除
	修改认证密码：按两次11，与原认证密码匹配成功，方可修改，修改后存储在文件系统中
B 密码解锁（系统密码、一次性临时密码）
	系统密码解锁：按一次13，正确输入系统密码即可解锁
	临时密码解锁：临时密码使用一次后失效，不使用则存储在文件系统
	修改系统临时密码：按两次13，与原系统密码匹配成功，方可修改，修改后存储在文件系统中
C 手机APP
	远程解锁
	开门记录
	用户管理（增、删用户，修改用户名）
	设备管理（绑定设备、取消绑定、修改设备信息、查询设备、修改系统密码）
	下发临时密码（有效次数一次）
D 通信
	认证信息AES加密
	每隔5秒发送心跳包维持连接
	数据包格式：数据标识+数据内容（128位AES加密，ECB模式，数据填充方式pkcs5padding）+数据长度+CRC校验
NOTE
	a 凡是解锁成功，设备都反馈给服务器，服务器反馈到手机用户
	b 解锁成功：绿灯亮一秒熄灭；解锁失败：红灯亮一秒熄灭+蜂鸣器提示
	c 手机APP的操作都是针对选中的设备进行操作




























GPIO寄存器描述 《STM32参考手册中文-p75》

1、端口配置低寄存器(GPIOx_CRL)(x = A...E)
2、端口配置高寄存器(GPIOx_CRH)(x = A...E)

3、端口输入数据寄存器(GPIOx_IDR)(x = A...E)
   这些位为只读并只能以字(16位)的形式读出。读出的值为对应I/O口的状态。
   
4、端口输出数据寄存器(GPIOx_ODR)(x = A...E)
   只能以字(16bit)的形式操作，复位值全是0。写0即输出0，写1即输出1。
   
5、端口位设置/清除寄存器(GPIOx_BSRR)(x = A...E)
   高16bit写1用于清0，低16bit写1用于置位，同时写1的话低16bi有效。
   
6、端口位清除寄存器(GPIOx_BRR)(x = A...E)
   低16位写1用于置位。
   
7、端口配置锁定寄存器(GPIOx_LCKR)(x = A...E)

GPIO八种模式
typedef enum
{ GPIO_Mode_AIN = 0x0,            /* 模拟输入 */   
  GPIO_Mode_IN_FLOATING = 0x04,   /* 浮空输入，复位后的状态 */
  GPIO_Mode_IPD = 0x28,           /* 下拉输入 */
  GPIO_Mode_IPU = 0x48,           /* 上拉输入 */
  GPIO_Mode_Out_OD = 0x14,        /* 开漏输出 */
  GPIO_Mode_Out_PP = 0x10,        /* 推挽输出 */
  GPIO_Mode_AF_OD = 0x1C,         /* 复用开漏输出 */
  GPIO_Mode_AF_PP = 0x18          /* 复用推挽输出 */
}GPIOMode_TypeDef;
